openapi: 3.1.0
x-stoplight:
  id: ol7skl20b16sm
info:
  title: SI API 1.0
  version: '1.0'
  summary: Exchange data with the StudioIntern SaaS app
  description: 'This API works only as an addition to the StudioIntern main application. This means that you have to be a StudioIntern customer in order to use this API. But, there is a free 2 month test period available.'
  contact:
    name: Support
    url: api.studiointern.de
    email: support@studiointern.de
  termsOfService: 'https://api.studiointern.de'
servers:
  - url: 'https://api.studiointern.de'
    description: Generic
paths:
  '/{customer_shortname}/v1/cust/courses/{id}':
    get:
      summary: Get current courses of a user's students
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: integer
                  classes:
                    type: array
                    items:
                      type: string
                x-examples:
                  Example 1:
                    message: OK
                    code: 0
                    classes:
                      - '3'
                      - '2'
                      - '14'
              examples:
                Example 1:
                  value:
                    message: OK
                    code: 0
                    classes:
                      - '3'
                      - '2'
                      - '14'
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal Server Error
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      operationId: get-cust-courses
      description: |-
        Get IDs of all classes/courses a specific user (dance studio's customer's student) has subscribed for. The user ID is calculated from Authorization string.
        ### Parameter
        If the id parameter is given, return only courses of the student with `id`.
      security:
        - UserPwdBase64: []
      tags:
        - Customer
      x-stoplight:
        id: g54f6mzt16mq0
    parameters:
      - name: id
        in: path
        schema:
          type: integer
        description: 'ID of user or student, depending of context'
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
  '/{customer_shortname}/v1/pub/events/{limit}/{filter}':
    get:
      summary: Get upcoming events
      tags:
        - Public
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: OK
                    code: 0
                    events:
                      - id: 07b74776-6b04-435f-9ca3-4114c39b9826
                        start: '2023-02-13 00:00:00'
                        end: '2023-02-13 00:00:00'
                        title: Winterferien
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: F_2023_termin63cb4bd5651d7@schulferien.org
                        start: '2023-02-13 00:00:00'
                        end: '2023-02-25 00:00:00'
                        title: Winterferien 2023 Sachsen
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: 6b793626-b890-48b9-8862-5f64031dd9a3
                        start: '2023-04-07 00:00:00'
                        end: '2023-04-07 00:00:00'
                        title: Osterferien
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: F_2023_termin63cb4bd565245@schulferien.org
                        start: '2023-04-07 00:00:00'
                        end: '2023-04-16 00:00:00'
                        title: Osterferien 2023 Sachsen
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: 9d616579-3c70-456e-80e0-9294b54fbcbe
                        start: '2023-05-19 00:00:00'
                        end: '2023-05-19 00:00:00'
                        title: Pfingstferien
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: F_2023_termin63cb4bd565284@schulferien.org
                        start: '2023-05-19 00:00:00'
                        end: '2023-05-20 00:00:00'
                        title: Pfingstferien 2023 Sachsen
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: 8d3e2c3c-de45-437f-99d1-f795ec250023
                        start: '2023-07-10 00:00:00'
                        end: '2023-07-10 00:00:00'
                        title: Sommerferien
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: F_2023_termin63cb4bd5652ad@schulferien.org
                        start: '2023-07-10 00:00:00'
                        end: '2023-08-19 00:00:00'
                        title: Sommerferien 2023 Sachsen
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: 6712a36d-6264-4acf-ba7c-923f557e8126
                        start: '2023-10-02 00:00:00'
                        end: '2023-10-02 00:00:00'
                        title: Herbstferien
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: F_2023_termin63cb4bd5652d4@schulferien.org
                        start: '2023-10-02 00:00:00'
                        end: '2023-10-15 00:00:00'
                        title: Herbstferien 2023 Sachsen
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: F_2023_termin63cb4bd56532f@schulferien.org
                        start: '2023-10-30 00:00:00'
                        end: '2023-10-31 00:00:00'
                        title: Herbstferien 2023 Sachsen
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: 227ef203-fd50-410c-88f7-9cfe72a1a116
                        start: '2023-11-30 00:00:00'
                        end: '2023-11-30 00:00:00'
                        title: Herbstferien
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: df7d761c-752f-47f5-9e98-68bd7b0dce70
                        start: '2023-12-23 00:00:00'
                        end: '2023-12-23 00:00:00'
                        title: Weihnachtsferien
                        description: ''
                        place: ''
                        is_holiday: '1'
                      - id: F_2023_termin63cb4bd565371@schulferien.org
                        start: '2023-12-23 00:00:00'
                        end: '2024-01-03 00:00:00'
                        title: Weihnachtsferien 2023 Sachsen
                        description: ''
                        place: ''
                        is_holiday: '1'
                properties:
                  message:
                    type: string
                  code:
                    type: integer
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
              examples:
                Example 1:
                  value:
                    message: OK
                    code: 0
                    events:
                      - id: 07b74776-6b04-435f-9ca3-4114c39b9826
                        start: '2023-02-13 00:00:00'
                        end: '2023-02-13 00:00:00'
                        title: Winterferien
                        description: ''
                        place: ''
                        is_holiday: true
                      - id: 6b793626-b890-48b9-8862-5f64031dd9a3
                        start: '2023-04-07 00:00:00'
                        end: '2023-04-07 00:00:00'
                        title: Osterferien
                        description: ''
                        place: ''
                        is_holiday: true
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-pub-events
      description: |-
        This endpoint delivers all events that are in the studio's events calendar. These are mainly holidays, but can also include other dates. You can restrict the number of results by providing the optional »limit« parameter. You can also filter results by a string. The filter will apply to the »title« property. Use urlencoded filter string if it contains whitespaces or slashes.
        ## Parameters
        ### limit
        An integer number that sets the maximum number of records to return.
        ### filter
        A string. Records will be filtered by this string against the `title` field. You have to urlencode the string if it contains characters that will break the query string (e.g. whitespace). It's a goog idea to **always** urlencode the string.
      security:
        - APIKey1: []
      x-stoplight:
        id: lecedijl8ts1y
    parameters:
      - name: limit
        in: path
        schema:
          type: number
        description: Return not more than this number of records
      - name: filter
        in: path
        schema:
          type: string
        description: Return only records that match this string in title field
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
  '/{customer_shortname}/v1/pub/courses':
    get:
      summary: Get all courses of the studio
      tags:
        - Public
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
              examples:
                Example 1:
                  value:
                    - id: '14'
                      title: Fit für die Hochzeit
                      description: 'Crashkurs zum Bestehen des Hochzeitstanzes, keine Vorkenntnisse erforderlich'
                      hours: '1.00'
                      weekday: Dienstag
                      starttime: '18:30'
                      endtime: '19:30'
                      remark: ''
                      target_group: '4'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-pub-courses
      description: Retrieve all courses (classes) that are currently offered by the studio with detail information. The value of the »description« data field depends on the studio's preference setting »Show description in course schedule?«.
      security:
        - APIKey1: []
      x-stoplight:
        id: q0i667gna289p
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
  '/{customer_shortname}/v1/pub/nextcourses':
    get:
      summary: Get upcoming classes
      tags:
        - Public
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                x-examples:
                  Example 1:
                    - kuID: 5
                      shortname: Fit für die Hochzeit
                      title: Fit für die Hochzeit
                      description: ''
                      duration: 1
                      units: 4
                      schedules:
                        - - date: '2023-02-09 21:00:00.000000'
                            timezone_type: 3
                            timezone: Europe/Berlin
                items:
                  $ref: '#/components/schemas/NextEvent'
              examples:
                Example 1:
                  value:
                    - kuID: 5
                      shortname: Fit für die Hochzeit
                      title: Fit für die Hochzeit
                      description: ''
                      duration: 1
                      units: 4
                      schedules:
                        - - date: '2023-02-09 21:00:00.000000'
                            timezone_type: 3
                            timezone: Europe/Berlin
                    - kuID: 9
                      shortname: Salsa Stufe 2
                      title: Salsa Aufbaukurs Stufe2
                      description: ''
                      duration: 1
                      units: 4
                      schedules:
                        - - date: '2023-02-03 19:00:00.000000'
                            timezone_type: 3
                            timezone: Europe/Berlin
                          - date: '2023-02-10 19:00:00.000000'
                            timezone_type: 3
                            timezone: Europe/Berlin
                        - - date: '2023-04-21 19:00:00.000000'
                            timezone_type: 3
                            timezone: Europe/Berlin
                          - date: '2023-04-28 19:00:00.000000'
                            timezone_type: 3
                            timezone: Europe/Berlin
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-pub-nextcourses
      description: Retrieve course list for courses that have a start date in the future (starting from today). Only for StudioIntern instances that run in "real calendar" mode (will return a 204 No Content header otherwise).
      security:
        - APIKey1: []
      x-stoplight:
        id: jo32ci8cctcb3
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
  '/{customer_shortname}/v1/pub/schedule/{period}/{date}':
    get:
      summary: Get classes' schedule
      tags:
        - Public
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-examples:
                  Example 1:
                    message: OK
                    code: 0
                    events:
                      - id: 139
                        dow: Montag
                        dow_short: Mo
                        date: ''
                        start_time: '10:00:00'
                        end_time: '10:55:00'
                        title: Ballett Beginner B
                        description: keine/geringe VK
                        extra: 'Ballett für Erwachsene, Anfänger'
                        teacher:
                          - Yu-Ching
                          - Tsao
                        more_info: ''
                        room: Saal 1
                        hours: 1
                        color: '#e4d040'
                      - id: 123
                        dow: Montag
                        dow_short: Mo
                        date: ''
                        start_time: '11:00:00'
                        end_time: '11:55:00'
                        title: K+D E
                        description: keine VK
                        extra: Kraft+Dehnung
                        teacher:
                          - Yu-Ching
                          - Tsao
                        more_info: ''
                        room: Saal 1
                        hours: 1
                        color: '#e4d040'
                properties:
                  message:
                    type: string
                  code:
                    type: integer
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/CourseSchedule'
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '417':
          description: Expectation Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      operationId: get-pub-schedule
      description: |-
        Delivers the day or week schedule for all classes that will take place in the specific week. If no courses takes place in the specified period, the API will return a `204 No Content` response header.
        ## Parameters
        ### period
        Can be one of these values: `today`, `week`, `weekofdate`. Defaults to `today`.
        #### today
        Get the schedule of the current day.
        #### week
        Get the schedule of the current week.
        #### weekofdate
        Get the schedule of the week in which the given date (next parameter) falls.
        <!-- theme: warning -->
        > #### Attention!
        >
        > This parameter is intended for the »real calendar« mode only in which StudioIntern is running. Since in »abstract week« mode every week has the same schedule, the `weekofdate` parameter makes no sense in this case. It will work, but the date is silently ignored.
        ### date
        Date in »SQL format« `yyyy-mm-dd`. Example: `2023-02-20`. Other date formats will cause a 417 response code.
        The given date will be ignored if the »period« parameter is not set to `weekofdate`. If the »period« parameter ist set to `weekofdate`and no date was given, the API will return a 417 response code.
      security:
        - APIKey1: []
      x-stoplight:
        id: enffyqxj6v2mn
    parameters:
      - name: period
        in: path
        schema:
          type: string
        description: '[today|weekday|weekofdate] default: today'
      - name: date
        in: path
        schema:
          type: string
        description: 'Format: yyyy-mm-dd. Mandatory if parameter period ist set to »weekofdate«.'
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
  '/{customer_shortname}/v1/pub/studio':
    get:
      summary: Get information about the dance studio
      tags:
        - Public
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  code:
                    type: integer
                  signature:
                    type: string
                x-examples:
                  Example 1:
                    message: OK
                    code: 0
                    signature: "Tanzwerk Leipzig UG (haftungsbeschränkt)\r\nhttps://Leipziger-Ballettschule.de\r\nRosa-Luxemburg-Str. 21, 04103 Leipzig\r\nTel. 0341 - 24 33 66 36; Amtsgericht Leipzig, HRB 30795\r\nSitz der Gesellschaft: Leipzig, Geschäftsführer: Andreas Vent-Schmidt"
              examples:
                Example 1:
                  value:
                    message: OK
                    code: 0
                    signature: "Tanzwerk Leipzig UG (haftungsbeschränkt)\r\nhttps://Leipziger-Ballettschule.de\r\nRosa-Luxemburg-Str. 21, 04103 Leipzig\r\nTel. 0341 - 24 33 66 36; Amtsgericht Leipzig, HRB 30795\r\nSitz der Gesellschaft: Leipzig, Geschäftsführer: Andreas Vent-Schmidt"
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: get-pub-studio
      description: 'Returns some information about your studio. For now (version 1.0), there are no parameters available and only the mail signature is returned.'
      security:
        - APIKey1: []
      x-stoplight:
        id: ydvyn646r5psh
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
  '/{customer_shortname}/v1/pub/user':
    post:
      summary: Create new user (studio's customer)
      operationId: post-pub-user
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '417':
          description: Expectation Failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      tags:
        - Public
      description: |-
        This endpoint creates a new end customer (user). Please don't mix up with StudioIntern's customer.
        The intention of this endpoint is to send data from contact forms on the public studio's website where people fill in the form in order to ask for a test class.
        Many of the StudioIntern's [extra modules](https://www.ballettschul-software.de/zusatzmodule.php) use this endpoint, too.

        **This endpoint will be replaced by /pub/customer/register in version 2 of this API.**
      security:
        - APIKey1: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                anrede:
                  type: string
                  minLength: 2
                  maxLength: 12
                  description: Salutation
                titel:
                  type: string
                  maxLength: 120
                  description: Academic title
                vorname:
                  type: string
                  maxLength: 64
                  description: First name
                nachname:
                  type: string
                  maxLength: 48
                  description: 'Last '
                adresse:
                  type: string
                  maxLength: 64
                  description: Address (Street + Number)
                adresszusatz:
                  type: string
                  maxLength: 64
                  description: Additional address information
                plz:
                  type: string
                  maxLength: 8
                  description: ZIP code
                ort:
                  type: string
                  maxLength: 64
                  description: City / Place
                mobil:
                  type: string
                  maxLength: 64
                  description: Mobile phone number
                email:
                  type: string
                  maxLength: 120
                  description: Email a
                bemerkungen:
                  type: string
                  description: Remarks
                sch_vorname:
                  type: array
                  description: 'Students (children''s) first '
                  items:
                    type: string
                    maxLength: 64
                sch_nachname:
                  type: array
                  description: Students (children's) last name
                  items:
                    type: string
                    maxLength: 48
                sch_geb_tag:
                  type: array
                  description: 'Students (children''s) date of birth, day as 2-digit number'
                  deprecated: true
                  items:
                    type: string
                    minLength: 2
                    maxLength: 2
                    deprecated: true
                sch_geb_monat:
                  type: array
                  description: 'Students (children''s) date of birth, month as 2-digit number'
                  deprecated: true
                  items:
                    type: string
                    minLength: 2
                    maxLength: 2
                    deprecated: true
                sch_geb_jahr:
                  type: array
                  description: 'Students (children''s) date of birth, year as 4-digit number'
                  deprecated: true
                  items:
                    type: string
                    minLength: 4
                    maxLength: 4
                    deprecated: true
                sch_geb:
                  format: date
                  description: 'Students (children''s) date of birth, different formats possible'
                  type: array
                  example: 14.01.2010 | 2010-01-14 | 14/01/2010
                  items:
                    type: string
                    example: 14.02.2010 | 2010-02-14 | 14/10/2010 | 20100214
                    minLength: 8
                    maxLength: 10
                notify:
                  type: integer
                  minimum: 0
                  maximum: 1
                  description: 'If set to »1«, the studio will receive a message when new user was created'
                notify_error:
                  type: integer
                  minimum: 0
                  maximum: 1
                  description: 'If set to »1«, the studio will receive a message in case of an error'
                customer_message:
                  type: string
                  description: Additonal message that will be stored in the »remarks« filed of the customer's recoord.
              required:
                - anrede
                - vorname
                - nachname
                - email
        description: |-
          ## General usage
          This endpoint is intented to receive data from an online contact form. You must name the form fields exactly as described here. Though in this API documentation all fields are part of an anonymous object, in real world you will not send an object but just regular POST data. Example:
          `anrede=Herr&vorname=Max&nachname=Mustermann&email=max@mustermann.de`
          <!-- theme: warning -->
          > #### Watch Out!
          >
          > These data describe a end-user (a studio's customer), not a StudioIntern customer.

          ## Student's data
          You can also send student data to this endpoint. In most cases, these are the children of a customer. But, since StudioIntern distincts between customers and students, **every** student must be sent. So, in case an adult customer is the student, too, you must send his data also in the `sch_*` fields.
          To stay with the above example: If Max Mustermann wants to take part in classes for himself, you must send data like this:
          `anrede=Herr&vorname=Max&nachname=Mustermann&email=max@mustermann.de&sch_vorname[0]=Max&sch_nachname[0]=Mustermann&sch_geb[0]=1998-08-30`
          As the example shows, you must provide student's data in an array. This way you can send multiple students at once. But, you can also create more students with separate calls.
          So if Max Mustermann's daughter Susane will also join a class, you could call the API again with this post data:
          `anrede=Herr&vorname=Max&nachname=Mustermann&email=max@mustermann.de&sch_vorname[0]=Susan&sch_nachname[0]=Mustermann&sch_geb[0]=2018-06-01`
          <!-- theme: info -->
          > ### Non-destructive endpoint!
          >
          > The API will **never** delete or overwrite existing data.
      deprecated: true
      x-stoplight:
        id: u85cgt6uh5fik
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
  '/{customer_shortname}/v2/pub/customer':
    get:
      tags:
        - Public
        - Customer
        - Core
      summary: Get customer registration flow information
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  code:
                    type: integer
                  data:
                    type: object
                    properties:
                      plugin_info:
                        $ref: '#/components/schemas/PluginInfo'
                      steps:
                        type: object
      description: This endpoint works only for the version 2 of the API.
      parameters: []
      x-stoplight:
        id: j3df984xzsxfx
    servers: []
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
        description: Your studio's shortname
      - schema:
          type: string
        in: header
        name: Accept
  '/{customer_shortname}/v2/pub/customer/register':
    post:
      tags:
        - Public
        - Customer
        - Core
      summary: Register a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - vorname
                - nachname
                - mobil
                - email
                - ist_schueler
              properties:
                anrede:
                  type: string
                  maxLength: 12
                titel:
                  type: string
                  maxLength: 12
                vorname:
                  type: string
                  maxLength: 64
                nachname:
                  type: string
                  maxLength: 48
                adresse:
                  type: string
                  maxLength: 64
                adresszusatz:
                  type: string
                  maxLength: 64
                plz:
                  type: string
                  maxLength: 8
                ort:
                  type: string
                  maxLength: 64
                telefon:
                  type: string
                mobil:
                  type: string
                email:
                  type: string
                  format: email
                bemerkungen:
                  type: string
                  maxLength: 512
                ist_schueler:
                  type: integer
                  enum:
                    - 1
                    - 2
                  description: |-
                    1: The customer is the same person as the student. Customer's data will be used to create a student.
                    2: The customer is not the same person as the student. In this case, the fields sch_vorname, sch_nachname and sch_geb are required.
                notify:
                  type: integer
                notify_error:
                  type: string
                  format: email
                no_custos:
                  type: integer
                  description: 'Don''t use Custos spam filter service. In order to use the Custos service, you must have an account.'
                sch_vorname:
                  type: array
                  x-stoplight:
                    id: fjef23n63u2sw
                  minItems: 1
                  description: First name of the student. Required if the field 'ist_schuler' has the value '2'.
                  items:
                    x-stoplight:
                      id: 9jyhlv9bkje0r
                    type: string
                  writeOnly: true
                sch_nachname:
                  type: array
                  x-stoplight:
                    id: ujn3p1uvdpji9
                  minItems: 1
                  description: Last name of the student. Required if the field 'ist_schuler' has the value '2'.
                  items:
                    x-stoplight:
                      id: j686pvrzjspez
                    type: string
                  writeOnly: true
                sch_geb:
                  type: array
                  x-stoplight:
                    id: a8envpqvf0ktf
                  minItems: 1
                  description: Date of birth of the student(s). Required if the field 'ist_schuler' has the value '2'.
                  items:
                    x-stoplight:
                      id: krq9wmbs5wppq
                    type: string
                    pattern: '^\d{4-\d{2}-\d{2}$'
                    format: date
                    example: '2025-03-26'
                    writeOnly: true
                  writeOnly: true
        description: |-
          ## General usage
          This endpoint is intented to receive data from an online contact form. You must name the form fields exactly as described here. Though in this API documentation all fields are part of an anonymous object, in real world you will not send an object but just regular POST data. Example:
          `anrede=Herr&vorname=Max&nachname=Mustermann&email=max@mustermann.de`
          <!-- theme: warning -->
          > #### Watch Out!
          >
          > These data describe a end-user (a studio's customer), not a StudioIntern customer.

          ## Student's data
          You can also send student data to this endpoint. In most cases, these are the children of a customer. But, since StudioIntern distincts between customers and students, **every** student must be sent. So, in case an adult customer is the student, too, you must send his data also in the `sch_*` fields.
          To stay with the above example: If Max Mustermann wants to take part in classes for himself, you must send data like this:
          `anrede=Herr&vorname=Max&nachname=Mustermann&email=max@mustermann.de&sch_vorname[0]=Max&sch_nachname[0]=Mustermann&sch_geb[0]=1998-08-30`
          As the example shows, you must provide student's data in an array. This way you can send multiple students at once. But, you can also create more students with separate calls.
          So if Max Mustermann's daughter Susane will also join a class, you could call the API again with this post data:
          `anrede=Herr&vorname=Max&nachname=Mustermann&email=max@mustermann.de&sch_vorname[0]=Susan&sch_nachname[0]=Mustermann&sch_geb[0]=2018-06-01`
          <!-- theme: info -->
          > ### Non-destructive endpoint!
          >
          > The API will **never** delete or overwrite existing data.
      responses:
        '200':
          description: Customer already exists
        '201':
          description: Customer created successfully
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: This endpoint works only for the version 2 of the API. It will replace the /pub/user (v1) endpoint soon.
      x-stoplight:
        id: 1g96wag9j7a9f
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
      - schema:
          type: string
        in: header
        name: Accept
  '/{customer_shortname}/v2/pub/student/appointment':
    post:
      tags:
        - Public
        - Student
        - Core
        - Appointment
        - CourseFinder
        - TrialClass
      summary: Create a new appointment for a student (trial class)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - lesson_id
                - student_id
                - date
              properties:
                lesson_id:
                  type: integer
                student_id:
                  type: integer
                date:
                  type: string
                  format: date
                  description: 'Date format: Y-m-d'
                message:
                  type: string
                  maxLength: 512
      responses:
        '201':
          description: Appointment created successfully
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: This endpoint works only for the version 2 of the API.
      parameters:
        - schema:
            type: string
          in: header
          name: User-Agent
          required: true
          description: Value will be provided by StudioIntern support.
      x-stoplight:
        id: ygz95ipko83hk
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
      - schema:
          type: string
        in: header
        name: Accept
      - schema:
          type: string
        in: header
        name: User-Agent
        required: true
  '/{customer_shortname}/v2/pub/cf':
    get:
      tags:
        - Public
        - CourseFinder
      summary: Get CourseFinder flow information
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  plugin_info:
                    $ref: '#/components/schemas/PluginInfo'
                  steps:
                    type: object
      description: |-
        This endpoint works only for the version 2 of the API.

        **It requires the CourseFinder PlugIn installed in your StudioIntern instance.**
      x-stoplight:
        id: 8pj8qm4khf8ax
      security:
        - Authorization: []
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
      - schema:
          type: string
        in: header
        name: Accept
        description: application/json
  '/{customer_shortname}/v2/pub/cf/ages':
    get:
      tags:
        - Public
        - CourseFinder
      summary: Get available age groups
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  plugin_info:
                    $ref: '#/components/schemas/PluginInfo'
                  ages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        from:
                          type: integer
                        to:
                          type: integer
                        image:
                          type: string
                          nullable: true
        '403':
          description: Product not booked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: |-
        This endpoint works only for the version 2 of the API.

        **It requires the CourseFinder PlugIn installed in your StudioIntern instance.**
      x-stoplight:
        id: dk5k8n3uao7gk
      security:
        - Authorization: []
      parameters:
        - schema:
            type: string
          in: header
          name: Accept
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
      - schema:
          type: string
        in: header
        name: Accept
  '/{customer_shortname}/v2/pub/cf/styles':
    get:
      tags:
        - Public
        - CourseFinder
      summary: Get available dance styles for age group
      parameters:
        - name: age_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  plugin_info:
                    $ref: '#/components/schemas/PluginInfo'
                  styles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        description:
                          type: string
                        image:
                          type: string
                          nullable: true
      description: |-
        This endpoint works only for the version 2 of the API.

        **It requires the CourseFinder PlugIn installed in your StudioIntern instance.**
      x-stoplight:
        id: s4guuv0ozsrns
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
      - schema:
          type: string
        in: header
        name: Accept
  '/{customer_shortname}/v2/pub/cf/levels':
    get:
      tags:
        - Public
        - CourseFinder
      summary: Get available levels for age and style
      parameters:
        - name: age_id
          in: query
          required: true
          schema:
            type: integer
        - name: style_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  plugin_info:
                    $ref: '#/components/schemas/PluginInfo'
                  levels:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        stars:
                          type: integer
                        description:
                          type: string
                        image:
                          type: string
                          nullable: true
      description: |-
        This endpoint works only for the version 2 of the API.

        **It requires the CourseFinder PlugIn installed in your StudioIntern instance.**
      x-stoplight:
        id: cy28ud4g0dcq9
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
      - schema:
          type: string
        in: header
        name: Accept
  '/{customer_shortname}/v2/pub/cf/lessons':
    get:
      tags:
        - Public
        - CourseFinder
      summary: Get available lessons for selected criteria
      parameters:
        - name: age_id
          in: query
          required: true
          schema:
            type: integer
        - name: style_id
          in: query
          required: true
          schema:
            type: integer
        - name: level_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  plugin_info:
                    $ref: '#/components/schemas/PluginInfo'
                  lessons:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        description:
                          type: string
                        tlight:
                          type: string
                        color:
                          type: string
                        teacher:
                          type: integer
                        weekday:
                          type: integer
                        begin:
                          type: string
                        end:
                          type: string
      description: |-
        This endpoint works only for the version 2 of the API.

        **It requires the CourseFinder PlugIn installed in your StudioIntern instance.**
      x-stoplight:
        id: 87mfpo6i3afz9
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
      - schema:
          type: string
        in: header
        name: Accept
  '/{customer_shortname}/v2/pub/cf/dates':
    get:
      tags:
        - Public
        - CourseFinder
      summary: Get available dates for a lesson
      parameters:
        - name: lesson_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  plugin_info:
                    $ref: '#/components/schemas/PluginInfo'
                  dates:
                    type: array
                    items:
                      type: string
                      format: date
        '404':
          description: Course not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      description: |-
        This endpoint works only for the version 2 of the API.

        **It requires the CourseFinder PlugIn installed in your StudioIntern instance.**
      x-stoplight:
        id: ieppwq2u3erft
    parameters:
      - schema:
          type: string
        name: customer_shortname
        in: path
        required: true
      - schema:
          type: string
        in: header
        name: Accept
components:
  schemas:
    User:
      type: object
      x-examples:
        Example 1:
          id: '50066'
          firstName: Barbara
          lastName: Aachen
          email: webmaster@vent.net
          active: true
      examples:
        - id: 99
          firstName: Monika
          lastName: Muster
          email: monimuster@gmail.com
          students:
            - id: '42'
              firstName: Mia
              lastName: Muster
              dayOfBirth: '2016-08-13'
              email: mia@muster.de
          active: true
      properties:
        id:
          type: integer
          description: The customers public number. This is not the internal database ID!
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        students:
          type: array
          items:
            $ref: '#/components/schemas/Student'
        active:
          type: boolean
          description: True if the customer's state is »customer«
    Student:
      type: object
      x-examples:
        Example 1:
          id: '241'
          firstName: Krawehl
          lastName: Aachen
          dayOfBirth: '1998-03-12'
          email: ''
      examples:
        - id: '42'
          firstName: Mia
          lastName: Muster
          dayOfBirth: '2016-08-13'
          email: mia@muster.de
      properties:
        id:
          type: integer
          description: The internal  database ID of the student
        firstName:
          type: string
        lastName:
          type: string
        dayOfBirth:
          type: string
        email:
          type: string
    Response:
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
      x-examples:
        Example 1:
          message: Password updated
          code: 0
      examples:
        - message: OK
          code: 0
    Course:
      type: object
      x-examples:
        Example 1:
          id: '14'
          title: Fit für die Hochzeit
          description: ''
          hours: '1.00'
          weekday: Dienstag
          starttime: '18:30'
          endtime: '19:30'
          remark: ''
          target_group: '4'
      examples:
        - id: '14'
          title: Fit für die Hochzeit
          description: 'Crashkurs zum Bestehen des Hochzeitstanzes, keine Vorkenntnisse erforderlich'
          hours: '1.00'
          weekday: Dienstag
          starttime: '18:30'
          endtime: '19:30'
          remark: ''
          target_group: '4'
      properties:
        id:
          type: integer
          description: 'Internal database id (unique, of course)'
        title:
          type: string
          description: The shortname of the course
        description:
          type: string
          description: 'If »Show description field in schedule« is set to »true«: description, otherwise: course title'
        hours:
          type: number
          description: 'Duration of the course. For instance, »1.50« means 1 hour and 30 minutes.'
        weekday:
          type: string
          description: 'Day of week (name, localized)'
        starttime:
          type: string
          description: 'Start time, format: HH:mm'
        endtime:
          type: string
          description: 'End time, format: HH:mm'
        remark:
          type: string
        target_group:
          type: integer
          description: 'Binary value: 1: Children, 2: Teenagers, 4: Adults'
    Event:
      type: object
      x-examples:
        Example 1:
          id: 07b74776-6b04-435f-9ca3-4114c39b9826
          start: '2023-02-13 00:00:00'
          end: '2023-02-13 00:00:00'
          title: Winterferien
          description: ''
          place: ''
          is_holiday: '1'
      examples:
        - id: 07b74776-6b04-435f-9ca3-4114c39b9826
          start: '2023-02-13 00:00:00'
          end: '2023-02-13 00:00:00'
          title: Winterferien
          description: ''
          place: ''
          is_holiday: true
      properties:
        id:
          type: string
        start:
          type: string
        end:
          type: string
        title:
          type: string
        description:
          type: string
        place:
          type: string
        is_holiday:
          type: boolean
    EventSchedule:
      type: object
      properties:
        date:
          type: string
        timezone_type:
          type: integer
        timezone:
          type: string
      x-examples:
        Example 1:
          date: '2023-02-09 21:00:00.000000'
          timezone_type: 3
          timezone: Europe/Berlin
      examples:
        - date: '2023-02-09 21:00:00.000000'
          timezone_type: 3
          timezone: Europe/Berlin
    NextEvent:
      type: object
      x-examples:
        Example 1:
          kuID: 5
          shortname: Fit für die Hochzeit
          title: Fit für die Hochzeit
          description: ''
          duration: 1
          units: 4
          schedules:
            - - date: '2023-02-09 21:00:00.000000'
                timezone_type: 3
                timezone: Europe/Berlin
      properties:
        kuID:
          type: integer
        shortname:
          type: string
        title:
          type: string
        description:
          type: string
        duration:
          type: integer
        units:
          type: integer
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/EventSchedule'
      examples:
        - - kuID: 5
            shortname: Fit für die Hochzeit
            title: Fit für die Hochzeit
            description: ''
            duration: 1
            units: 4
            schedules:
              - - date: '2023-02-09 21:00:00.000000'
                  timezone_type: 3
                  timezone: Europe/Berlin
          - kuID: 9
            shortname: Salsa Stufe 2
            title: Salsa Aufbaukurs Stufe2
            description: ''
            duration: 1
            units: 4
            schedules:
              - - date: '2023-02-03 19:00:00.000000'
                  timezone_type: 3
                  timezone: Europe/Berlin
                - date: '2023-02-10 19:00:00.000000'
                  timezone_type: 3
                  timezone: Europe/Berlin
              - - date: '2023-04-21 19:00:00.000000'
                  timezone_type: 3
                  timezone: Europe/Berlin
                - date: '2023-04-28 19:00:00.000000'
                  timezone_type: 3
                  timezone: Europe/Berlin
    CourseSchedule:
      type: object
      x-examples:
        Example 1:
          id: '154'
          dow: Montag
          dow_short: Mo
          date: '2023-01-30'
          start_time: '10:00:00'
          end_time: '10:55:00'
          title: Ballett Medium Level B
          description: VK erforderlich
          extra: Ballett mit Vorkenntnissen bis Mittelstufe
          teacher:
            - Susanne
            - Kuchler
          more_info: ''
          room: Saal 1
          hours: '1.00'
          color: '#e4d040'
      examples:
        - id: 154
          dow: Montag
          dow_short: Mo
          date: '2023-01-30'
          start_time: '10:00:00'
          end_time: '10:55:00'
          title: Ballett Medium Level B
          description: VK erforderlich
          extra: Ballett mit Vorkenntnissen bis Mittelstufe
          teacher:
            - Vorname
            - Nachname
          more_info: ''
          room: Saal 1
          hours: 1
          color: '#e4d040'
      properties:
        id:
          type: integer
        dow:
          type: string
        dow_short:
          type: string
        date:
          type: string
          description: Empty if StudioIntern runs in »abstract week« mode and parameter »period« has value `week`.
        start_time:
          type: string
        end_time:
          type: string
        title:
          type: string
        description:
          type: string
        extra:
          type: string
        teacher:
          type: array
          items:
            type: string
        more_info:
          type: string
        room:
          type: string
        hours:
          type: number
        color:
          type: string
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
    UsrPwdBase64:
      name: Digest
      type: apiKey
      in: header
  responses: {}
  parameters:
    limit:
      name: limit
      in: path
      schema:
        type: number
      description: Return not more than this number of records
    filter:
      name: filter
      in: path
      schema:
        type: string
      description: Return only records that match this string in title field
    period:
      name: period
      in: path
      schema:
        type: string
      description: '[today|weekday|weekofdate] default: today'
    date:
      name: date
      in: path
      schema:
        type: string
      description: 'Format: yyyy-mm-dd. Mandatory if parameter period ist set to »weekofdate«.'
    id:
      name: id
      in: path
      schema:
        type: integer
      description: 'ID of user or student, depending of context'
tags:
  - name: Customer
    description: Access »/cust« endpoints
  - name: Public
    description: Access »/pub« endpoints
security:
  - Authorization: []
